(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{404:function(s,t,e){"use strict";e.r(t);var a=e(21),v=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"devtools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#devtools"}},[s._v("#")]),s._v(" DevTools")]),s._v(" "),e("h3",{attrs:{id:"截图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#截图"}},[s._v("#")]),s._v(" 截图")]),s._v(" "),e("p",[s._v("选中节点，"),e("code",[s._v("com + shift + P")]),s._v("，搜索 "),e("code",[s._v("screenshot")]),s._v(" 命令，可以截取当前节点或者截全屏。")]),s._v(" "),e("h3",{attrs:{id:"复制变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复制变量"}},[s._v("#")]),s._v(" 复制变量")]),s._v(" "),e("p",[s._v("在控制台中使用全局的 "),e("code",[s._v("copy()")]),s._v(" 方法。")]),s._v(" "),e("h3",{attrs:{id:"切换主题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换主题"}},[s._v("#")]),s._v(" 切换主题")]),s._v(" "),e("p",[e("code",[s._v("com + shift + P")]),s._v("，搜索 "),e("code",[s._v("theme")]),s._v("，选择明暗主题。")]),s._v(" "),e("h3",{attrs:{id:"运行代码块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行代码块"}},[s._v("#")]),s._v(" 运行代码块")]),s._v(" "),e("p",[s._v("进入到 "),e("code",[s._v("Sources")]),s._v(" 面板，在导航栏里选中 "),e("code",[s._v("Snippets")]),s._v(" 这栏，点击 "),e("code",[s._v("New snippet(新建一个代码块)")]),s._v(" ，然后输入你的代码之后保存，大功告成！现在你可以通过右击菜单或者快捷键： "),e("code",[s._v("[ctrl] + [enter]")]),s._v(" 来运行它了。")]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("Command Menu (com + shift + P)")]),s._v(" 才是最快的方式。只需在它的输入框中输入 "),e("code",[s._v("!")]),s._v(" ，就可以根据名字来筛选预设代码块。")]),s._v(" "),e("h3",{attrs:{id:"console-中的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#console-中的"}},[s._v("#")]),s._v(" console 中的 "),e("code",[s._v("$")])]),s._v(" "),e("p",[s._v("在 "),e("code",[s._v("Chrome")]),s._v(" 的 "),e("code",[s._v("Elements")]),s._v(" 面板中， "),e("code",[s._v("$0")]),s._v(" 是对我们当前选中的 "),e("code",[s._v("html")]),s._v(" 节点的引用。"),e("code",[s._v("$1")]),s._v(" 是对上一次我们选择的节点的引用，"),e("code",[s._v("$2")]),s._v(" 是对在那之前选择的节点的引用，一直到 "),e("code",[s._v("$4")]),s._v("。")]),s._v(" "),e("p",[s._v("如果没有在 "),e("code",[s._v("App")]),s._v(" 中定义过 "),e("code",[s._v("$")]),s._v(" 变量 (例如 "),e("code",[s._v("jQuery")]),s._v(" )的话，它在 "),e("code",[s._v("console")]),s._v(" 中就是对这一大串函数 "),e("code",[s._v("document.querySelector")]),s._v(" 的别名。 "),e("code",[s._v("$$")]),s._v(" 它不仅执行 "),e("code",[s._v("document.QuerySelectorAll")]),s._v(" 并且它返回的是：一个节点的 "),e("strong",[s._v("数组")]),s._v(" ，而不是一个 "),e("code",[s._v("Node list")]),s._v("。")]),s._v(" "),e("p",[e("code",[s._v("$_")]),s._v(" 是对上次执行的结果的 "),e("strong",[s._v("引用")]),s._v(" 。")]),s._v(" "),e("h3",{attrs:{id:"条件断点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件断点"}},[s._v("#")]),s._v(" 条件断点")]),s._v(" "),e("p",[s._v("右击行号，选择 "),e("code",[s._v("Add conditional breakpoint...(添加条件断点)")]),s._v("，或者右击一个已经设置的断点并且选择 "),e("code",[s._v("Edit breakpoint(编辑断点)")]),s._v("，然后输入一个执行结果为 "),e("code",[s._v("true")]),s._v(" 或者 "),e("code",[s._v("false")]),s._v(" 的表达式。或者直接添加 console.log / console.table / console.time 等等。")]),s._v(" "),e("h3",{attrs:{id:"异步的-console"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步的-console"}},[s._v("#")]),s._v(" 异步的 console")]),s._v(" "),e("p",[s._v("可以在控制台直接使用 "),e("code",[s._v("await")]),s._v(" ：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("response "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\njson "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("json")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 直接打印 json 的值")]),s._v("\n")])])]),e("h3",{attrs:{id:"console-的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#console-的方法"}},[s._v("#")]),s._v(" console 的方法")]),s._v(" "),e("p",[e("strong",[s._v("console.assert")]),s._v(" 当我们传入的第一个参数为 "),e("strong",[s._v("假")]),s._v(" 时，打印跟在这个参数后面的值。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'value'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("p",[e("strong",[s._v("console.table")]),s._v(" 以一个漂亮的表格的形式打印出来。")]),s._v(" "),e("p",[e("strong",[s._v("console.dir")]),s._v(" 要打印一个 "),e("code",[s._v("DOM")]),s._v(" 节点所关联到的真实的 js 对象。")]),s._v(" "),e("p",[e("strong",[s._v("console.time")]),s._v(" 开启一个计时器，"),e("strong",[s._v("console.timeEnd")]),s._v(" 结束计时并且将结果在 "),e("code",[s._v("console")]),s._v(" 中打印出来。")]),s._v(" "),e("h3",{attrs:{id:"console-样式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#console-样式"}},[s._v("#")]),s._v(" console 样式")]),s._v(" "),e("p",[s._v("如果给打印文本加上 "),e("code",[s._v("%c")]),s._v(" 那么 "),e("code",[s._v("console.log")]),s._v(" 的第二个参数就变成了"),e("code",[s._v("CSS")]),s._v(" 规则了。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc%cdef'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'color: red;'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印 abcdef 其中 cdef 将会是红色")]),s._v("\n")])])]),e("h3",{attrs:{id:"实时表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实时表达式"}},[s._v("#")]),s._v(" 实时表达式")]),s._v(" "),e("p",[s._v('只需按下 "眼睛" 符号，可以在那里定义任何 '),e("code",[s._v("JavaScript")]),s._v(" 表达式。 当表达式的值变化，打印的值它会不断更新。")]),s._v(" "),e("h3",{attrs:{id:"重发请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重发请求"}},[s._v("#")]),s._v(" 重发请求")]),s._v(" "),e("p",[s._v("如果是 XHR 类型的请求，可以点击右键，点击 "),e("code",[s._v("Replay XHR")]),s._v(" 重发请求，不必刷新页面。")]),s._v(" "),e("h3",{attrs:{id:"检查修改的内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检查修改的内容"}},[s._v("#")]),s._v(" 检查修改的内容")]),s._v(" "),e("p",[s._v("通过浏览器进行设计和调整 "),e("code",[s._v("css")]),s._v(" ：能够在代码执行的地方进行调试是方便又有趣的开发方式。 但在某些时候，你可能希望将已更改的内容与 最初加载的样式表进行比较。")]),s._v(" "),e("p",[s._v("点击主页面在 "),e("code",[s._v("Drawer")]),s._v("的 "),e("code",[s._v("console")]),s._v(" 面板前面的 "),e("code",[s._v("⋮")]),s._v(" 图标来打开完整选项列表。另外，你也可以打开之前我们提到的 "),e("code",[s._v("command Menu")]),s._v(" ，然后输入 "),e("code",[s._v("Drawer")]),s._v(" 来打开。")])])}),[],!1,null,null,null);t.default=v.exports}}]);