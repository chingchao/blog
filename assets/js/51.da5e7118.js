(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{389:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[t._v("#")]),t._v(" Path")]),t._v(" "),a("h3",{attrs:{id:"path-join-…paths"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path-join-…paths"}},[t._v("#")]),t._v(" "),a("code",[t._v("path.join([…paths])")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("...paths")]),t._v(" "),a("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("<string>")]),a("OutboundLink")],1),t._v(" 路径片段的序列。")]),t._v(" "),a("li",[t._v("返回: "),a("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("<string>")]),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("code",[t._v("path.join()")]),t._v(" 方法使用平台特定的分隔符作为定界符将所有给定的 "),a("code",[t._v("path")]),t._v(" 片段连接在一起，然后规范化生成的路径。")]),t._v(" "),a("p",[t._v("零长度的 "),a("code",[t._v("path")]),t._v(" 片段会被忽略。 如果连接的路径字符串是零长度的字符串，则返回 "),a("code",[t._v("'.'")]),t._v("，表示当前工作目录。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'baz/asdf'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quux'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'..'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回: '/foo/bar/baz/asdf'")]),t._v("\n\npath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抛出 'TypeError: Path must be a string. Received {}'")]),t._v("\n")])])]),a("p",[t._v("如果任何路径片段不是字符串，则抛出 "),a("a",{attrs:{href:"http://nodejs.cn/s/Z7Lqyj",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("TypeError")]),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"path-resolve-paths"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path-resolve-paths"}},[t._v("#")]),t._v(" "),a("code",[t._v("path.resolve([...paths])")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("…paths")]),t._v(" "),a("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("<string>")]),a("OutboundLink")],1),t._v("路径或路径片段的序列。")]),t._v(" "),a("li",[t._v("返回: "),a("a",{attrs:{href:"http://nodejs.cn/s/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("<string>")]),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("code",[t._v("path.resolve()")]),t._v(" 方法将路径或路径片段的序列解析为绝对路径。其处理方式类似于对这些路径逐一进行cd操作。")]),t._v(" "),a("p",[t._v("给定的路径序列从右到左进行处理，每个后续的 "),a("code",[t._v("path")]),t._v(" 前置，直到构造出一个绝对路径。 例如，给定的路径片段序列："),a("code",[t._v("/foo")]),t._v("、 "),a("code",[t._v("/bar")]),t._v("、 "),a("code",[t._v("baz")]),t._v("，调用 "),a("code",[t._v("path.resolve('/foo', '/bar', 'baz')")]),t._v(" 将返回 "),a("code",[t._v("/bar/baz")]),t._v("。")]),t._v(" "),a("p",[t._v("如果在处理完所有给定的 "),a("code",[t._v("path")]),t._v(" 片段之后还未生成绝对路径，则再加上当前工作目录。")]),t._v(" "),a("p",[t._v("生成的路径已规范化，并且除非将路径解析为根目录，否则将删除尾部斜杠。")]),t._v(" "),a("p",[t._v("零长度的 "),a("code",[t._v("path")]),t._v(" 片段会被忽略。")]),t._v(" "),a("p",[t._v("如果没有传入 "),a("code",[t._v("path")]),t._v(" 片段，则 "),a("code",[t._v("path.resolve()")]),t._v(" 将返回当前工作目录的绝对路径。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo/bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./baz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回: '/foo/bar/baz'")]),t._v("\n\npath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo/bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/tmp/file/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回: '/tmp/file'")]),t._v("\n\npath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wwwroot'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'static_files/png/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../gif/image.gif'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果当前工作目录是 /home/myself/node，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 则返回 '/home/myself/node/wwwroot/static_files/gif/image.gif'")]),t._v("\n")])])]),a("p",[a("code",[t._v("path.resolve('foo/bar', '/tmp/file/', '..', 'a/../subfile')")]),t._v(" 相当于：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" foo/bar\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /tmp/file/\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" a/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/subfile\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);